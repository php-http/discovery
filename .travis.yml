language: php

cache:
    directories:
        - $HOME/.composer/cache/files

env:
    global:
        - TEST_COMMAND="composer test"
        - PULI_VERSION=1.0.0-beta10

branches:
    except:
        - /^analysis-.*$/

matrix:
    fast_finish: true
    include:
        - name: PHPSpec 7.1
          php: 7.1
        - name: PHPSpec 7.2
          php: 7.2
        - name: PHPSpec 7.3
          php: 7.3
        - name: PHPSpec 7.4
          php: 7.4
        - name: PHPSpec 8.0
          php: nightly
          env: COMPOSER_FLAGS="--prefer-stable --ignore-platform-reqs" DEPENDENCIES="phpdocumentor/reflection-docblock:^5.2@dev"
        - name: PHPSpec lowest
          php: 7.1
          env: COMPOSER_FLAGS="--prefer-stable --prefer-lowest" PULI_VERSION=1.0.0-beta9
        - name: PHPSpec code coverage
          php: 7.2
          env: COVERAGE=true TEST_COMMAND="composer test-ci" DEPENDENCIES="friends-of-phpspec/phpspec-code-coverage:^4.3 phpspec/phpspec:^5.1"
        - name: PHPUnit tests
          php: 7.3
          env: TEST_COMMAND="./vendor/bin/phpunit" DEPENDENCIES="phpunit/phpunit:^7.5 nyholm/psr7:^1.0 kriswallsmith/buzz:^1.0 php-http/curl-client:^1.0 php-http/message"
        - name: PHPUnit test with nothing installed
          php: 7.3
          env: TEST_COMMAND="./vendor/bin/phpunit --group=NothingInstalled" DEPENDENCIES="phpunit/phpunit:^7.5"

        - name: Test Install
          php: 7.3
          install:
              - |
                # install_test is a helper to create folded reports (From Symfony)
                install_test () {
                    local title="$1 \"$2\" ..."
                    local fold=$(date +%s%N)
                    echo -e "travis_fold:start:$fold"
                    echo -e "\\e[1;34m$title\\e[0m"
                    echo "./tests/install.sh \"$1\" \"$2\" \"$3\" \"$4\""
                    ./tests/install.sh "$1" "$2" "$3" "$4" 2>&1
                    local ok=$?
                    (exit $ok) &&
                        echo -e "\\e[32mOK\\e[0m $title\\n\\ntravis_fold:end:$fold" ||
                        echo -e "\\e[41mKO\\e[0m $title\\n"
                    (exit $ok)
                }
                export -f install_test

          script:
              # Test that we find Guzzle 6 v1
              - install_test will-find "Http\Discovery\HttpClientDiscovery::find();" "php-http/guzzle6-adapter:^1.1.1"
              # Test that we find Guzzle 6 v2
              - install_test will-find "Http\Discovery\HttpClientDiscovery::find();" "php-http/guzzle6-adapter:^2.0.1"
              # Test that we find Guzzle 7 Adapter
              - install_test will-find "Http\Discovery\HttpClientDiscovery::find();" "php-http/guzzle7-adapter:^0.1"
              # Test that we find a client with Symfony and Guzzle PSR-7
              - install_test will-find "Http\Discovery\HttpClientDiscovery::find();" "symfony/http-client:5.* php-http/httplug php-http/message-factory guzzlehttp/psr7:1.* http-interop/http-factory-guzzle"
              # We should fail if we dont have php-http/message-factory or PSR-17
              - install_test cant-find "Http\Discovery\HttpClientDiscovery::find();" "symfony/http-client:5.* php-http/httplug php-http/message-factory guzzlehttp/psr7:1.*"
              - install_test cant-find "Http\Discovery\HttpClientDiscovery::find();" "symfony/http-client:5.* php-http/httplug guzzlehttp/psr7:1.* http-interop/http-factory-guzzle"
              # We should be able to find a client when Symfony is only partly installed and we have guzzle adapter installed
              - install_test will-find "Http\Discovery\HttpClientDiscovery::find();" "symfony/http-client:5.* php-http/guzzle6-adapter php-http/httplug php-http/message-factory guzzlehttp/psr7:1.*"
              # Test that we find a client with Symfony and Guzzle
              - install_test will-find "Http\Discovery\HttpClientDiscovery::find();" "php-http/client-common:2.* php-http/message:1.8.* symfony/http-client:4.* php-http/guzzle6-adapter"
              # Test that we find an async client with Symfony and Guzzle
              - install_test will-find "Http\Discovery\HttpAsyncClientDiscovery::find();" "php-http/client-common:2.* php-http/message:1.8.* symfony/http-client:4.* php-http/guzzle6-adapter"
              # Test that we find PSR-18 Guzzle 6
              - install_test will-find "Http\Discovery\Psr18ClientDiscovery::find();" "php-http/guzzle6-adapter:^2.0.1"
              # Test that we find PSR-18 Guzzle 7
              - install_test will-find "Http\Discovery\Psr18ClientDiscovery::find();" "guzzlehttp/guzzle:^7.0.1"
              # Test that we find PSR-18 Symfony 4
              - install_test will-find "Http\Discovery\Psr18ClientDiscovery::find();" "symfony/http-client:4.* php-http/httplug nyholm/psr7:^1.3"
              # Test that we find PSR-18 Symfony 5
              - install_test will-find "Http\Discovery\Psr18ClientDiscovery::find();" "symfony/http-client:5.* php-http/httplug nyholm/psr7:^1.3"
              # Test that we find PSR-17 http-interop
              - install_test will-find "Http\Discovery\Psr17FactoryDiscovery::findRequestFactory();" "http-interop/http-factory-guzzle:1.*"
              # Test that we find PSR-17 nyholm
              - install_test will-find "Http\Discovery\Psr17FactoryDiscovery::findRequestFactory();" "nyholm/psr7:^1.3"
              # Test that we find Phalcon with PSR
              - install_test will-find "Http\Discovery\Psr17FactoryDiscovery::findRequestFactory();" "" "psr-1.0.0 phalcon-4.0.6"

before_install:
    - if [[ $COVERAGE != true ]]; then phpenv config-rm xdebug.ini || true; fi
    - if ! [ -z "$DEPENDENCIES" ]; then composer require --no-update ${DEPENDENCIES}; fi;

install:
    - wget https://github.com/puli/cli/releases/download/1.0.0-beta10/puli.phar && chmod +x puli.phar
    - composer require puli/composer-plugin:${PULI_VERSION} --no-update
    - composer update ${COMPOSER_FLAGS} --prefer-dist --no-interaction

script:
    - $TEST_COMMAND

after_success:
    - if [[ $COVERAGE = true ]]; then wget https://scrutinizer-ci.com/ocular.phar; fi
    - if [[ $COVERAGE = true ]]; then php ocular.phar code-coverage:upload --format=php-clover build/coverage.xml; fi
